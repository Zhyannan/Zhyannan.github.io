<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zhyannan&#39;s blogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-10T03:47:45.107Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhyannan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS-进阶</title>
    <link href="http://yoursite.com/2016/07/21/2016-7-20-css-02/"/>
    <id>http://yoursite.com/2016/07/21/2016-7-20-css-02/</id>
    <published>2016-07-21T13:39:46.000Z</published>
    <updated>2018-07-10T03:47:45.107Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-CSS进阶&quot;&gt;&lt;a href=&quot;#1-CSS进阶&quot; class=&quot;headerlink&quot; title=&quot;1.  CSS进阶&quot;&gt;&lt;/a&gt;1.  CSS进阶&lt;/h2&gt;&lt;h3 id=&quot;1-布局常用属性样式&quot;&gt;&lt;a href=&quot;#1-布局常用属性样式&quot; class=&quot;headerlink&quot; title=&quot;1.布局常用属性样式:&quot;&gt;&lt;/a&gt;1.布局常用属性样式:&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;width&lt;/td&gt;
&lt;td&gt;设置元素(标签)的宽度&lt;/td&gt;
&lt;td&gt;width: 200px;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;height&lt;/td&gt;
&lt;td&gt;设置元素(标签)的高度&lt;/td&gt;
&lt;td&gt;height: 200px;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;background&lt;/td&gt;
&lt;td&gt;设置元素背景色或者背景图片(详看下面)&lt;/td&gt;
&lt;td&gt;background: pink;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;border&lt;/td&gt;
&lt;td&gt;设置元素四周的边框&lt;/td&gt;
&lt;td&gt;border: 1px solid pink;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;border-top&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;设置元素顶部边框&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;border-top: 1px solid/ dashed pink;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;border-left&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;设置元素左边边框&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;border-left: 1px solid pink;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;border-right&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;设置元素右边边框&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;border-right: 1px solid pink;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;border-bottom&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;设置元素底部边框&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;border-bottom: 1px solid pink;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS-基础</title>
    <link href="http://yoursite.com/2016/07/20/2016-7-20-css-01/"/>
    <id>http://yoursite.com/2016/07/20/2016-7-20-css-01/</id>
    <published>2016-07-20T13:39:46.000Z</published>
    <updated>2018-07-10T03:47:56.827Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CSS介绍&quot;&gt;&lt;a href=&quot;#CSS介绍&quot; class=&quot;headerlink&quot; title=&quot;CSS介绍&quot;&gt;&lt;/a&gt;CSS介绍&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;为了让网页元素的样式更加的丰富, 也为了让网页的内容和样式能拆分开, CSS由此而诞生.  &lt;/p&gt;
&lt;p&gt;CSS是 Cascading  Style  Sheets 的首写字母缩写,意思是层叠样式表.  &lt;/p&gt;
&lt;p&gt;有了CSS, html 中大部分表现样式的标签就废弃不用了, html只负责文档的结构和内容, &lt;/p&gt;
&lt;p&gt;表现形式完全交给CSS, 这样使得html文档变得更加简洁.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>了解前端</title>
    <link href="http://yoursite.com/2016/07/19/2016-7-19-html/"/>
    <id>http://yoursite.com/2016/07/19/2016-7-19-html/</id>
    <published>2016-07-19T13:39:46.000Z</published>
    <updated>2018-07-10T03:49:12.884Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一-了解前端&quot;&gt;&lt;a href=&quot;#一-了解前端&quot; class=&quot;headerlink&quot; title=&quot;一. 了解前端&quot;&gt;&lt;/a&gt;一. 了解前端&lt;/h1&gt;&lt;h2 id=&quot;1-什么是前端&quot;&gt;&lt;a href=&quot;#1-什么是前端&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是前端&quot;&gt;&lt;/a&gt;1. 什么是前端&lt;/h2&gt;&lt;p&gt;前端即网站前台部分，运行在PC端，移动端等浏览器上展现给用户浏览的网页。随着互联网技术的发展，HTML5，CSS3，前端框架的应用，跨平台响应式网页设计能够适应各种屏幕分辨率，完美的动效设计，给用户带来极高的用户体验。 &lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>辨析 Sass 中的 Map 和 List</title>
    <link href="http://yoursite.com/2016/07/12/2016-7-12-demo/"/>
    <id>http://yoursite.com/2016/07/12/2016-7-12-demo/</id>
    <published>2016-07-12T02:34:12.000Z</published>
    <updated>2018-07-10T03:44:50.948Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;如果你使用过 Sass 3.3 之前的版本，那么你一定对那段时光颇有感触，那时候没有现如今这么好的条件，那时候的 Map 还只能用多重列表（lists of list）来模拟。多重列表可以实现复杂数据的嵌套定义，但却不是以键值对的形式实现的，所有当我们需要获取其中特定的某一项时就会比较麻烦。Map 这种数据类型天生就是基于键值对的形式，非常便于组织数据。&lt;/p&gt;
&lt;p&gt;自从可以使用 Map 之后，开发者们开始毫无顾忌地定义 Map 存储数据，比如断点宽度、颜色值、栅格布局等等响应式排版的细节，都被一股脑的塞进了 Map 中。&lt;/p&gt;
&lt;p&gt;那么，有了 Map 之后，我们还有必要使用 List 吗？可能某些人会觉得为了保持向后兼容应该继续使用多重列表模拟 Map，因为可能有些开发者仍然在使用老版本的 Sass 编译器，但实际上，这是多此一举了，Sass 的版本通常由 &lt;code&gt;package.json&lt;/code&gt; 或者其他同类型的项目配置文件所控制，往往只需一条命令（&lt;code&gt;gem update sass&lt;/code&gt;）即可更新 Sass 的版本，因此基本上无需考虑对老版本的兼容问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
</feed>
